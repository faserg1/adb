#include "event.hpp"
#include <unordered_map>
using namespace adb::api;

#define DEFINE_EVENT_PAIR(EVENT_NAME) {#EVENT_NAME, Event :: EVENT_NAME}
#define DEFINE_EVENT_PAIR2(EVENT_NAME) {Event :: EVENT_NAME, #EVENT_NAME}

namespace
{
    std::unordered_map<std::string_view, Event> eventMap
    {
        DEFINE_EVENT_PAIR(HELLO),
        DEFINE_EVENT_PAIR(READY),
        DEFINE_EVENT_PAIR(RESUMED),
        DEFINE_EVENT_PAIR(RECONNECT),
        DEFINE_EVENT_PAIR(INVALID_SESSION),
        DEFINE_EVENT_PAIR(CHANNEL_CREATE),
        DEFINE_EVENT_PAIR(CHANNEL_UPDATE),
        DEFINE_EVENT_PAIR(CHANNEL_DELETE),
        DEFINE_EVENT_PAIR(CHANNEL_PINS_UPDATE),
        DEFINE_EVENT_PAIR(THREAD_CREATE),
        DEFINE_EVENT_PAIR(THREAD_UPDATE),
        DEFINE_EVENT_PAIR(THREAD_DELETE),
        DEFINE_EVENT_PAIR(THREAD_LIST_SYNC),
        DEFINE_EVENT_PAIR(THREAD_MEMBER_UPDATE),
        DEFINE_EVENT_PAIR(THREAD_MEMBERS_UPDATE),
        DEFINE_EVENT_PAIR(GUILD_CREATE),
        DEFINE_EVENT_PAIR(GUILD_UPDATE),
        DEFINE_EVENT_PAIR(GUILD_DELETE),
        DEFINE_EVENT_PAIR(GUILD_BAN_ADD),
        DEFINE_EVENT_PAIR(GUILD_BAN_REMOVE),
        DEFINE_EVENT_PAIR(GUILD_EMOJIS_UPDATE),
        DEFINE_EVENT_PAIR(GUILD_STICKERS_UPDATE),
        DEFINE_EVENT_PAIR(GUILD_INTEGRATIONS_UPDATE),
        DEFINE_EVENT_PAIR(GUILD_MEMBER_ADD),
        DEFINE_EVENT_PAIR(GUILD_MEMBER_REMOVE),
        DEFINE_EVENT_PAIR(GUILD_MEMBER_UPDATE),
        DEFINE_EVENT_PAIR(GUILD_MEMBERS_CHUNK),
        DEFINE_EVENT_PAIR(GUILD_ROLE_CREATE),
        DEFINE_EVENT_PAIR(GUILD_ROLE_UPDATE),
        DEFINE_EVENT_PAIR(GUILD_ROLE_DELETE),
        DEFINE_EVENT_PAIR(GUILD_SCHEDULED_EVENT_CREATE),
        DEFINE_EVENT_PAIR(GUILD_SCHEDULED_EVENT_UPDATE),
        DEFINE_EVENT_PAIR(GUILD_SCHEDULED_EVENT_DELETE),
        DEFINE_EVENT_PAIR(GUILD_SCHEDULED_EVENT_USER_ADD),
        DEFINE_EVENT_PAIR(GUILD_SCHEDULED_EVENT_USER_REMOVE),
        DEFINE_EVENT_PAIR(INTEGRATION_CREATE),
        DEFINE_EVENT_PAIR(INTEGRATION_UPDATE),
        DEFINE_EVENT_PAIR(INTEGRATION_DELETE),
        DEFINE_EVENT_PAIR(INTERACTION_CREATE),
        DEFINE_EVENT_PAIR(INVITE_CREATE),
        DEFINE_EVENT_PAIR(INVITE_DELETE),
        DEFINE_EVENT_PAIR(MESSAGE_CREATE),
        DEFINE_EVENT_PAIR(MESSAGE_UPDATE),
        DEFINE_EVENT_PAIR(MESSAGE_DELETE),
        DEFINE_EVENT_PAIR(MESSAGE_DELETE_BULK),
        DEFINE_EVENT_PAIR(MESSAGE_REACTION_ADD),
        DEFINE_EVENT_PAIR(MESSAGE_REACTION_REMOVE),
        DEFINE_EVENT_PAIR(MESSAGE_REACTION_REMOVE_ALL),
        DEFINE_EVENT_PAIR(MESSAGE_REACTION_REMOVE_EMOJI),
        DEFINE_EVENT_PAIR(PRESENCE_UPDATE),
        DEFINE_EVENT_PAIR(STAGE_INSTANCE_CREATE),
        DEFINE_EVENT_PAIR(STAGE_INSTANCE_DELETE),
        DEFINE_EVENT_PAIR(STAGE_INSTANCE_UPDATE),
        DEFINE_EVENT_PAIR(TYPING_START),
        DEFINE_EVENT_PAIR(USER_UPDATE),
        DEFINE_EVENT_PAIR(VOICE_STATE_UPDATE),
        DEFINE_EVENT_PAIR(VOICE_SERVER_UPDATE),
        DEFINE_EVENT_PAIR(WEBHOOKS_UPDATE),
    };
    std::unordered_map<Event, std::string_view> eventMap2
    {
        DEFINE_EVENT_PAIR2(HELLO),
        DEFINE_EVENT_PAIR2(READY),
        DEFINE_EVENT_PAIR2(RESUMED),
        DEFINE_EVENT_PAIR2(RECONNECT),
        DEFINE_EVENT_PAIR2(INVALID_SESSION),
        DEFINE_EVENT_PAIR2(CHANNEL_CREATE),
        DEFINE_EVENT_PAIR2(CHANNEL_UPDATE),
        DEFINE_EVENT_PAIR2(CHANNEL_DELETE),
        DEFINE_EVENT_PAIR2(CHANNEL_PINS_UPDATE),
        DEFINE_EVENT_PAIR2(THREAD_CREATE),
        DEFINE_EVENT_PAIR2(THREAD_UPDATE),
        DEFINE_EVENT_PAIR2(THREAD_DELETE),
        DEFINE_EVENT_PAIR2(THREAD_LIST_SYNC),
        DEFINE_EVENT_PAIR2(THREAD_MEMBER_UPDATE),
        DEFINE_EVENT_PAIR2(THREAD_MEMBERS_UPDATE),
        DEFINE_EVENT_PAIR2(GUILD_CREATE),
        DEFINE_EVENT_PAIR2(GUILD_UPDATE),
        DEFINE_EVENT_PAIR2(GUILD_DELETE),
        DEFINE_EVENT_PAIR2(GUILD_BAN_ADD),
        DEFINE_EVENT_PAIR2(GUILD_BAN_REMOVE),
        DEFINE_EVENT_PAIR2(GUILD_EMOJIS_UPDATE),
        DEFINE_EVENT_PAIR2(GUILD_STICKERS_UPDATE),
        DEFINE_EVENT_PAIR2(GUILD_INTEGRATIONS_UPDATE),
        DEFINE_EVENT_PAIR2(GUILD_MEMBER_ADD),
        DEFINE_EVENT_PAIR2(GUILD_MEMBER_REMOVE),
        DEFINE_EVENT_PAIR2(GUILD_MEMBER_UPDATE),
        DEFINE_EVENT_PAIR2(GUILD_MEMBERS_CHUNK),
        DEFINE_EVENT_PAIR2(GUILD_ROLE_CREATE),
        DEFINE_EVENT_PAIR2(GUILD_ROLE_UPDATE),
        DEFINE_EVENT_PAIR2(GUILD_ROLE_DELETE),
        DEFINE_EVENT_PAIR2(GUILD_SCHEDULED_EVENT_CREATE),
        DEFINE_EVENT_PAIR2(GUILD_SCHEDULED_EVENT_UPDATE),
        DEFINE_EVENT_PAIR2(GUILD_SCHEDULED_EVENT_DELETE),
        DEFINE_EVENT_PAIR2(GUILD_SCHEDULED_EVENT_USER_ADD),
        DEFINE_EVENT_PAIR2(GUILD_SCHEDULED_EVENT_USER_REMOVE),
        DEFINE_EVENT_PAIR2(INTEGRATION_CREATE),
        DEFINE_EVENT_PAIR2(INTEGRATION_UPDATE),
        DEFINE_EVENT_PAIR2(INTEGRATION_DELETE),
        DEFINE_EVENT_PAIR2(INTERACTION_CREATE),
        DEFINE_EVENT_PAIR2(INVITE_CREATE),
        DEFINE_EVENT_PAIR2(INVITE_DELETE),
        DEFINE_EVENT_PAIR2(MESSAGE_CREATE),
        DEFINE_EVENT_PAIR2(MESSAGE_UPDATE),
        DEFINE_EVENT_PAIR2(MESSAGE_DELETE),
        DEFINE_EVENT_PAIR2(MESSAGE_DELETE_BULK),
        DEFINE_EVENT_PAIR2(MESSAGE_REACTION_ADD),
        DEFINE_EVENT_PAIR2(MESSAGE_REACTION_REMOVE),
        DEFINE_EVENT_PAIR2(MESSAGE_REACTION_REMOVE_ALL),
        DEFINE_EVENT_PAIR2(MESSAGE_REACTION_REMOVE_EMOJI),
        DEFINE_EVENT_PAIR2(PRESENCE_UPDATE),
        DEFINE_EVENT_PAIR2(STAGE_INSTANCE_CREATE),
        DEFINE_EVENT_PAIR2(STAGE_INSTANCE_DELETE),
        DEFINE_EVENT_PAIR2(STAGE_INSTANCE_UPDATE),
        DEFINE_EVENT_PAIR2(TYPING_START),
        DEFINE_EVENT_PAIR2(USER_UPDATE),
        DEFINE_EVENT_PAIR2(VOICE_STATE_UPDATE),
        DEFINE_EVENT_PAIR2(VOICE_SERVER_UPDATE),
        DEFINE_EVENT_PAIR2(WEBHOOKS_UPDATE),
    };
}

#undef DEFINE_EVENT_PAIR
#undef DEFINE_EVENT_PAIR2

std::string adb::api::to_string(Event e)
{
    return std::string(eventMap2.find(e)->second);
}

Event adb::api::from_string(std::string_view str)
{
    return eventMap.find(str)->second;
}
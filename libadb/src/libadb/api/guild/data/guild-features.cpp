#include <libadb/api/guild/data/guild-features.hpp>
#include <unordered_map>
using namespace adb::api;

#define DEFINE_FEATURE_PAIR(FEATURE_NAME) {#FEATURE_NAME, GuildFeature :: FEATURE_NAME}
#define DEFINE_FEATURE_PAIR2(FEATURE_NAME) {GuildFeature :: FEATURE_NAME, #FEATURE_NAME}

namespace
{
    std::unordered_map<std::string_view, GuildFeature> featureMap
    {
        DEFINE_FEATURE_PAIR(ANIMATED_BANNER),
        DEFINE_FEATURE_PAIR(ANIMATED_ICON),
        DEFINE_FEATURE_PAIR(BANNER),
        DEFINE_FEATURE_PAIR(COMMERCE),
        DEFINE_FEATURE_PAIR(COMMUNITY),
        DEFINE_FEATURE_PAIR(DISCOVERABLE),
        DEFINE_FEATURE_PAIR(FEATURABLE),
        DEFINE_FEATURE_PAIR(INVITE_SPLASH),
        DEFINE_FEATURE_PAIR(MEMBER_VERIFICATION_GATE_ENABLED),
        DEFINE_FEATURE_PAIR(MONETIZATION_ENABLED),
        DEFINE_FEATURE_PAIR(MORE_STICKERS),
        DEFINE_FEATURE_PAIR(NEWS),
        DEFINE_FEATURE_PAIR(PARTNERED),
        DEFINE_FEATURE_PAIR(PREVIEW_ENABLED),
        DEFINE_FEATURE_PAIR(PRIVATE_THREADS),
        DEFINE_FEATURE_PAIR(ROLE_ICONS),
        DEFINE_FEATURE_PAIR(SEVEN_DAY_THREAD_ARCHIVE),
        DEFINE_FEATURE_PAIR(THREE_DAY_THREAD_ARCHIVE),
        DEFINE_FEATURE_PAIR(TICKETED_EVENTS_ENABLED),
        DEFINE_FEATURE_PAIR(VANITY_URL),
        DEFINE_FEATURE_PAIR(VERIFIED),
        DEFINE_FEATURE_PAIR(VIP_REGIONS),
        DEFINE_FEATURE_PAIR(WELCOME_SCREEN_ENABLED)
    };
    std::unordered_map<GuildFeature, std::string_view> featureMap2
    {
        DEFINE_FEATURE_PAIR2(ANIMATED_BANNER),
        DEFINE_FEATURE_PAIR2(ANIMATED_ICON),
        DEFINE_FEATURE_PAIR2(BANNER),
        DEFINE_FEATURE_PAIR2(COMMERCE),
        DEFINE_FEATURE_PAIR2(COMMUNITY),
        DEFINE_FEATURE_PAIR2(DISCOVERABLE),
        DEFINE_FEATURE_PAIR2(FEATURABLE),
        DEFINE_FEATURE_PAIR2(INVITE_SPLASH),
        DEFINE_FEATURE_PAIR2(MEMBER_VERIFICATION_GATE_ENABLED),
        DEFINE_FEATURE_PAIR2(MONETIZATION_ENABLED),
        DEFINE_FEATURE_PAIR2(MORE_STICKERS),
        DEFINE_FEATURE_PAIR2(NEWS),
        DEFINE_FEATURE_PAIR2(PARTNERED),
        DEFINE_FEATURE_PAIR2(PREVIEW_ENABLED),
        DEFINE_FEATURE_PAIR2(PRIVATE_THREADS),
        DEFINE_FEATURE_PAIR2(ROLE_ICONS),
        DEFINE_FEATURE_PAIR2(SEVEN_DAY_THREAD_ARCHIVE),
        DEFINE_FEATURE_PAIR2(THREE_DAY_THREAD_ARCHIVE),
        DEFINE_FEATURE_PAIR2(TICKETED_EVENTS_ENABLED),
        DEFINE_FEATURE_PAIR2(VANITY_URL),
        DEFINE_FEATURE_PAIR2(VERIFIED),
        DEFINE_FEATURE_PAIR2(VIP_REGIONS),
        DEFINE_FEATURE_PAIR2(WELCOME_SCREEN_ENABLED)
    };
}

#undef DEFINE_FEATURE_PAIR
#undef DEFINE_FEATURE_PAIR2

std::string adb::api::to_string(GuildFeature e)
{
    return std::string(featureMap2.find(e)->second);
}

void adb::api::from_string(const std::string &str, GuildFeature &feature)
{
    feature = featureMap.find(str)->second;
}